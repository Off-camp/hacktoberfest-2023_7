Given two strings. The task is to find the length of the longest common substring.


Example 1:

Input: S1 = "ABCDGH", S2 = "ACDGHR", n = 6, m = 6
Output: 4
Explanation: The longest common substring
is "CDGH" which has length 4.


def longestCommonSubstring(S1, S2, n, m):
    # Create a 2D DP table to store the lengths of common substrings
    dp = [[0] * (m + 1) for _ in range(n + 1)]
    
    max_length = 0  # Variable to store the length of the longest common substring
    
    for i in range(1, n + 1):
        for j in range(1, m + 1):
            if S1[i - 1] == S2[j - 1]:
                dp[i][j] = dp[i - 1][j - 1] + 1
                max_length = max(max_length, dp[i][j])
            else:
                dp[i][j] = 0

    return max_length

# Example usage
S1 = "ABCDGH"
S2 = "ACDGHR"
n = 6
m = 6

result = longestCommonSubstring(S1, S2, n, m)
print(result)  # Output: 4
